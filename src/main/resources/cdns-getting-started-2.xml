<?xml version="1.0" encoding="utf-8"?>
<?rax-warinfo cdns-v1.0-cdns-getting-started?>

<!DOCTYPE book [
        <!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash  "&#x2013;">
        <!ENTITY mdash  "&#x2014;">
        <!ENTITY hellip "&#x2026;">
        
        <!-- Useful for describing APIs -->
        <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">
        
        <!-- Useful for specs -->
        <!ENTITY MAY    '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MAY</emphasis>'>
        <!ENTITY SHOULD '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">SHOULD</emphasis>'>
        <!ENTITY MUST   '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST</emphasis>'>
        <!ENTITY MUST_NOT   '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST NOT</emphasis>'>
]>

<book xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml"
      version="5.0"
      xml:id="cdns-getting-started-2"
      xml:base="file:/Users/mike.asthalter/Documents/DNSaaS/docs-cloud-dns/src/main/resources/cdns-getting-started-2.xml">
    
    <?rax title.font.size="35px" subtitle.font.size="20px"?>
    <title>Rackspace Managed DNS Getting Started Guide</title>
    <?rax status.bar.text="PREVIEW"?>
    <titleabbrev>Rackspace Managed DNS Getting Started
        Guide</titleabbrev>

    <info>
        
        <copyright>
            <year>2011</year>
            <year>2012</year>
            <year>2013</year>
            <year>2014</year>
            <year>2015</year>
            <year>2016</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>API v2</releaseinfo>
        <productname>Rackspace Managed DNS</productname>
        <pubdate>2016-01-12</pubdate>
        <legalnotice role="rs-api">
            <annotation>
                <remark>Copyright details are filled in by the template.</remark>
            </annotation>
        </legalnotice>
        <revhistory>
            <revision>
                <date>2015-11-12</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Initial Preview release.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>           
        </revhistory>
	     <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
	        <raxm:displayname>Getting Started Guide</raxm:displayname>
	        <raxm:product version="v2">cdns</raxm:product>
	        <raxm:priority>1</raxm:priority>
	     </raxm:metadata>
    </info>
    <chapter xml:id="DNS_Overview">
        <title>Overview</title>
        <para>This guide provides step-by-step instructions for how to
            use cURL to call the necessary Rackspace Managed DNS API
            operations to set up Rackspace Managed DNS for
                <trademark>Cloud Servers</trademark>. It also provides
            instructions if you prefer to use the CLI (Command Line
            Interface). Additional details about Rackspace Managed DNS
            can be found in the <citetitle>Rackspace Managed DNS
                Developer Guide</citetitle> at <link
                xlink:href="https://developer.rackspace.com/docs/"
                >http://docs-internal.rackspace.com</link> and at
                <link
                xlink:href="https://www.rackspace.com/cloud/cloud_hosting_products/dns/"
                >http://www.rackspace.com/cloud/cloud_hosting_products/dns/</link>.</para>
        <para>Issues and bug reports can be directed to:
                <email>ManagedDNS_Preview@rackspace.com</email>.</para>
        <para>Rackspace is deploying <link
                xlink:href="http://docs.openstack.org/developer/designate/"
                >OpenStack Designate v2</link> as the next version of
            Rackspace Managed DNS at Rackspace. Managed DNS supports
            only Designate v2 and not Designate v1.<note>
                <para>PTR records are currently supported in Rackspace
                    Managed DNS, but are not yet supported during the
                    Rackspace Managed DNS Preview phase. </para>
            </note></para>
        <para>This guide will show you how to use the Rackspace
            Managed DNS API to set up zones and records using
            Rackspace Managed DNS Preview Access at Rackspace.</para>
        <section xml:id="Prerequisites_Examples">
            <title>Prerequisites for running examples</title>
            <para>In order to run the examples in this guide, you must
                have the following prerequisites: <itemizedlist spacing="compact">
                    <listitem>
                        <para>Rackspace Cloud account</para>
                    </listitem>
                    <listitem>
                        <para>Rackspace Cloud username and password,
                            as specified during registration (<link
                                xlink:href="https://mycloud.rackspace.com/"
                                >https://mycloud.rackspace.com/</link>)</para>
                    </listitem>
                </itemizedlist>
         </para>
        </section>
        <section version="5.0" xml:id="designateclient">
            <title>How the Designate client works</title>
            <para>The Designate client Command Line Interface (CLI) is
                now a plugin for OpenStack CLI.</para>
            <para>You install the CLI clients on a Linux distribution
                or on Mac OS X. You install the CLI clients in the
                upcoming section "Install the CLI Clients". </para>
            <para>To configure the trove client, you update your
                .bash_profile file (or .bashrc) to set and export
                trove environment variables. </para>
            <note>
                <para>You can specify the <code>--debug</code>
                    parameter on any trove command to show the
                    underlying API request for the command. This is a
                    good way to become familiar with the API requests.
                </para>
            </note>
        </section>
        <section version="5.0" xml:id="curl">
            <title>How cURL Commands Work</title>
            <para>cURL is a command-line tool that you can use to
                interact with <glossterm>REST</glossterm> interfaces.
                cURL lets you to transmit and receive
                    <glossterm>HTTP</glossterm> requests and responses
                from the command line or a shell script, which enables
                you to work with the API directly. It is available for
                Linux distributions, Mac OS X, and Windows. For
                information about cURL, see <link
                    xlink:href="http://curl.haxx.se/"
                    >http://curl.haxx.se/</link>. </para>
            <para>To run the cURL request examples shown in this
                guide, copy each example from the HTML version of this
                guide directly to the command line or a script.</para>
            <para>The following command is an example cURL command for
                a JSON request that provisions a server with an
                isolated network:</para>
            <example xml:id="JSON_Example">
                <title>cURL Command Example: JSON Request </title>
                <programlisting language="bash" role="gutter: false"><?db-font-size 60%?><prompt>$</prompt> curl https://dfw.servers.api.rackspacecloud.com/v2/$account/servers \
       -X POST \
       -H "X-Auth-Project-Id: $account" \
       -H "Content-Type: application/json" \
       -H "Accept: application/json" \
       -H "X-Auth-Token: $token" \
       -d '{"server": {"name": "my_server_with_network", "imageRef": "d42f821e-c2d1-4796-9f07-af5ed7912d0e", "flavorRef": "2", "max_count": 1, "min_count": 1, "networks": [{"uuid": "538a112a-34d1-47ff-bf1e-c40639e886e2"}, {"uuid": "00000000-0000-0000-0000-000000000000"}, {"uuid": "11111111-1111-1111-1111-111111111111"}]}}' \
      | python -m json.tool</programlisting>
            </example>
            <note>
                <para>The carriage returns in the cURL request
                    examples are escaped with a backslash
                        (<literal>\</literal>) character. The escape
                    character allows continuation of the command
                    across multiple lines. However, do not include the
                    escape character in the JSON request body within
                    the cURL command.</para>
            </note>
            <para>The cURL examples in this guide use the following
                command-line options:</para>
            <table xml:id="curl_options" rules="all" width="75%">
                <caption>cURL Command-Line Options</caption>
                <thead>
                    <tr>
                        <th>Option</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <option>-d</option>
                        </td>
                        <td>
                            <para>Sends the specified data in a &POST;
                                request to the HTTP server. Use this
                                option to send a JSON request body to
                                the server.</para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-H</option>
                        </td>
                        <td>
                            <para>Specifies an extra HTTP header in
                                the request. You can specify any
                                number of extra headers. Precede each
                                header with the <option>-H</option>
                                option. </para>
                            <para>Common headers in Rackspace API
                                requests are:<itemizedlist>
                                   <listitem>
                                   <para><literal>Content-Type</literal>.
                                   Required for operations with a
                                   request body. </para>
                                   <para>Specifies the format of the
                                   request body. The syntax for the
                                   <literal>Content-Type</literal>
                                   header is:</para>
                                   <screen><computeroutput>Content-Type: application/<parameter>format</parameter></computeroutput></screen>
                                   <para>Where
                                   <parameter>format</parameter> is
                                   <literal>json</literal>.</para>
                                   </listitem>
                                   <listitem>
                                   <para><literal>X-Auth-Project-Id</literal>.
                                   Optional. Specifies the project ID,
                                   which can be your account number or
                                   another value.</para>
                                   </listitem>
                                   <listitem>
                                   <para><literal>Accept</literal>.
                                   Optional. </para>
                                   <para>Specifies the format of the
                                   response body. The syntax for the
                                   <literal>Accept</literal> header
                                   is:</para>
                                   <screen><computeroutput>Accept: application/<parameter>format</parameter></computeroutput></screen>
                                   <para>Where
                                   <parameter>format</parameter> is
                                   <literal>json</literal>. Default is
                                   <literal>json</literal>.</para>
                                   </listitem>
                                   <listitem>
                                   <para><literal>X-Auth-Token</literal>.
                                   Required. Specifies the
                                   authentication token.</para>
                                   </listitem>
                                </itemizedlist></para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-i</option>
                        </td>
                        <td>
                            <para>Includes the HTTP header in the
                                output. </para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-s</option>
                        </td>
                        <td>
                            <para>Silent or quiet mode. Does not show
                                progress or error messages. Makes cURL mute.<note>
                                   <para>If your cURL command is not
                                   generating any output, try
                                   replacing the <code>-s</code>
                                   option with <code>-i</code>.</para>
                                </note>
                            </para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-T</option>
                        </td>
                        <td>
                            <para>Transfers the specified local file
                                to the remote URL.</para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-X</option>
                        </td>
                        <td>
                            <para>Specifies the request method to use
                                when communicating with the HTTP
                                server. The specified request is used
                                instead of the default method, which
                                is &GET;. </para>
                        </td>
                    </tr>
                </tbody>
            </table>
            <note xml:id="json_tool">
                <title>json.tool</title>
                <para>For commands that return a response, you can
                    append the following code to the command to call
                    the json.tool to pretty-print output: </para>
                <programlisting language="bash" role="gutter: false">| python -m json.tool</programlisting>
                <para>To use the json.tool, import the json module.
                    For information about the json.tool, see <link
                        xlink:href="http://docs.python.org/2/library/json.html"
                        >json — JSON encoder and decoder</link>. </para>
                <para>If you do not want to pretty-print JSON output,
                    omit this code. </para>
            </note>
            <?hard-pagebreak?>
        </section>
    </chapter>
    <chapter xml:id="Create_Cloud_Server" security="writeronly">
        <title>Create a new cloud server</title>
        <para>This guide requires one cloud server for setting up DNS
            using the Rackspace Managed DNS API. If you will be using
            one <emphasis>existing</emphasis> cloud server on your
            account for this purpose, skip Steps 1-7 and go directly
            to step 8 below, where you can record the IP address of
            your existing cloud server. Otherwise, follow the steps
            below to create a new cloud server:</para>
        <para>Create a cloud server using the cloud servers section of
            the Cloud Control Panel (login here: <link
                xlink:href="http://mycloud.rackspace.com/">Cloud
                Control Panel</link>).</para>
        <note>
            <para>You can also create a cloud server using the Cloud
                Servers API. Refer to the <citetitle>
                    <link xlink:href="http://developer.rackspace.com/docs/"
                        >Cloud Servers API Developer Guide</link>
                </citetitle> for details.</para>
        </note>
        <procedure>
            <title>To create a cloud server using the Cloud Control
                Panel:</title>
            <step>
                <para>Click <guimenuitem>Servers</guimenuitem> to view
                    the Cloud Servers page.</para>
            </step>
            <step>
                <para> Click <guimenuitem>Create
                    Server</guimenuitem>.</para>
            </step>
            <step>
                <para> Specify the <guilabel>Server Name</guilabel>
                    and select a <guilabel>Size</guilabel> for your
                    cloud server, then click <guibutton>Create
                        Server</guibutton>. </para>
            </step>
            <step>
                <para>Using the <guimenu>Region</guimenu> drop-down
                    menu, select the appropriate region.</para>
            </step>
            <step>
                <para> Select an image from a list of different
                    operating systems, including Linux Distributions
                    and Windows Images. For the purposes of this
                    exercise, you can select any image listed.</para>
                <para security="writeronly">
               <inlinemediaobject>
                    <imageobject>
                        <imagedata 
                            fileref="images/Choose_CS_Image_CCP2.png"
                            contentwidth="6in" />
                    </imageobject>
                </inlinemediaobject>
            </para>
            </step>
            <step>
                <para>Select the desired<guimenu>Flavor</guimenu>. 1
                    GB General Purpose v1 is suggested for this
                    exercise.</para>
            </step>
            <step>
                <para>Click <guimenu>Create Server</guimenu> to create
                    your server.</para>
            </step>
            <step>
                <para>Record the IP address listed for your cloud
                    server below:<itemizedlist>
                        <listitem>
                            <para>Cloud server IP address =
                                _______________________________________ </para>
                        </listitem>
                    </itemizedlist>Also make a note of the root admin
                    password, since you will need it to perform
                    administrative tasks on the server. </para>
            </step>
        </procedure>
    </chapter>
    <chapter xml:id="install_CLI_clients">
        <title>Install the CLI clients</title>
        <para>If you want to run the cURL examples instead of CLI,
            skip this step and proceed to the next section "Send
            Requests to the API".</para>
        <para>Run the following commands on a Mac or Linux
            distribution to install the OpenStack and Designate
            clients:</para>
        <programlisting>$ sudo pip install -U python-openstackclient 
$ sudo pip install -U python-designateclient </programlisting>
        <para>Create a CLI config file with the content as shown
            below, and name the file <emphasis role="bold"
                >clouds.yaml</emphasis> underneath your current
            directory.</para>
        <programlisting>clouds:
  prod:
    auth:
      auth_url: https://identity.api.rackspacecloud.com/v2.0/
      project_id: 123456
      username: &lt;RACKSPACE_CLOUD_USERNAME>
      password: &lt;RACKSPACE_CLOUD_PASSWORD></programlisting>
        <para>See the following for more CLI configuration options:
            <link xlink:href="http://docs.openstack.org/developer/python-openstackclient/configuration.html"
                >configuring OpenStack CLI/</link>.</para>
        <para>Export the necessary environment
            variables:<programlisting> $ export OS_CLOUD=prod </programlisting></para>
        <para>Run the following command to see if OpenStack/Designate
            CLI
            works:<programlisting>$ openstack --help </programlisting></para>
        <para>If you get an error such as <emphasis role="italic"
                >Exception: Versioning for this project requires
                either an sdist tarball, or access to an upstream git
                repository. Are you sure that git is
                installed?</emphasis>, run the following
            command:<programlisting>$ sudo pip install -U distribute</programlisting>
        </para>
        <para>Skip to the section "Create a Zone".</para>
    </chapter>
    <chapter xml:id="Sending_API_Requests">
        <title>Send requests to the API</title>
        <para>You have several options for sending requests through an
            API: </para>
        <itemizedlist spacing="compact">
            <listitem>
                <para>Developers and testers may prefer to use cURL,
                    the command-line tool from <link xlink:href="http://curl.haxx.se/">http://curl.haxx.se/</link>. </para>
                <para>With cURL you can send HTTP requests and receive
                    responses back from the command line. </para>
            </listitem>
            <listitem>
                <para>If you like to use a more graphical interface,
                    the REST client for Firefox also works well for
                    testing and trying out commands, see <link xlink:href="https://addons.mozilla.org/en-US/firefox/addon/restclient/">https://addons.mozilla.org/en-US/firefox/addon/restclient/</link>. </para>
            </listitem>
            <listitem>
                <para>You can also download and install rest-client, a
                    Java application to test ReSTful web services,
                    from <link xlink:href="http://code.google.com/p/rest-client/">http://code.google.com/p/rest-client/</link>. </para>
            </listitem>
        </itemizedlist>
        <section xml:id="DB_using-curl-cli">
            <title>Send API requests using cURL</title>
            <para>cURL is a command-line tool that is available on
                most UNIX®-like environments and Mac OS X® and can be
                downloaded for Windows® in order to interact with the
                REST interfaces. For more information on cURL, visit
                    <link xlink:href="http://curl.haxx.se/">http://curl.haxx.se/</link>. </para>
            <para>cURL allows you to transmit and receive HTTP requests and responses from the
                command-line or from within a shell script. This makes it possible to work with the REST API
                directly without using one of the client APIs. </para>
            <para security="writeronly">The following cURL command-line options are used in
                this guide to run the examples:</para>
            <table xml:id="curl_options2" rules="all" width="75%" security="writeronly">
                <caption>cURL command-line options</caption>
                <thead>
                    <tr>
                        <th>Option</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <option>-d</option>
                        </td>
                        <td>
                            <para>Sends the specified data in a <command>POST</command>
                                request to the HTTP server. Use this
                                option to send a JSON or XML request
                                body to the server.</para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-H</option>
                        </td>
                        <td>
                            <para>Specifies an extra HTTP header in
                                the request. You can specify any
                                number of extra headers. Precede each
                                header with the <option>-H</option>
                                option. </para>
                            <para>Common headers in Rackspace API
                                requests are:<itemizedlist>
                                   <listitem>
                                   <para>
                                 <literal>Content-Type</literal>.
                                   Required for operations with a
                                   request body. </para>
                                   <para>Specifies the format of the
                                   request body. The syntax for the
                                   <literal>Content-Type</literal>
                                   header is:</para>
                                   <screen>Content-Type: application/<emphasis>format</emphasis></screen>
                                   <para>Where
                                   <parameter>format</parameter> is
                                   either <literal>json</literal> or
                                   <literal>xml</literal>.</para>
                                   </listitem>
                                   <listitem>
                                   <para>
                                 <literal>X-Auth-Project-Id</literal>.
                                   Optional. Specifies the project ID,
                                   which can be your account number or
                                   another value.</para>
                                   </listitem>
                                   <listitem>
                                   <para>
                                 <literal>Accept</literal>.
                                   Optional. </para>
                                   <para>Specifies the format of the
                                   response body. The syntax for the
                                   <literal>Accept</literal> header
                                   is:</para>
                                   <screen>Accept: application/format</screen>
                                   <para>Where
                                   <parameter>format</parameter> is
                                   either <literal>json</literal> or
                                   <literal>xml</literal>. Default is
                                   <literal>json</literal>.</para>
                                   </listitem>
                                   <listitem>
                                   <para>
                                 <literal>X-Auth-Token</literal>.
                                   Required. Specifies the
                                   authentication token.</para>
                                   </listitem>
                                </itemizedlist>
                     </para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-i</option>
                        </td>
                        <td>
                            <para>Includes the HTTP header in the
                                output to dump the response headers as
                                well as the response body. </para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-s</option>
                        </td>
                        <td>
                            <para>Silent or quiet mode. Does not show
                                progress or error messages. Makes cURL mute.<note>
                                   <para>If your cURL command is not
                                   generating any output, try
                                   replacing the <code>-s</code>
                                   option with <code>-i</code>.</para>
                                </note>
                            </para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-X</option>
                        </td>
                        <td>
                            <para>Specifies the request method to use
                                when communicating with the HTTP
                                server. The specified request is used
                                instead of the default method, which
                                is <command>GET</command>. </para>
                        </td>
                    </tr>
                </tbody>
            </table>
            <note xml:id="json_tool2" security="writeronly">
                <title>json.tool</title>
                <para>For commands that return a JSON response, you
                    can append the following code to the command to
                    call the json.tool to pretty-print output: </para>
                <programlisting language="bash" role="gutter: false">| python -m json.tool</programlisting>
                <para>To use the json.tool, import the json module.
                    For information about the json.tool, see <link xlink:href="http://docs.python.org/2/library/json.html">json — JSON encoder and decoder</link>. </para>
                <para>If you do not want to pretty-print JSON output,
                    omit this code. </para>
            </note>
        </section>
        <section xml:id="DB_copy_paste_examples">
            <title>Copying and pasting cURL request examples into a
                terminal window</title>
            <para>To run the cURL request examples shown in this guide
                on Linux or Mac systems, select the desired example
                from this guide and then select Edit-&gt;Copy. Then
                paste it into an ASCII editor (for example <emphasis
                    role="bold">vi</emphasis> or <emphasis role="bold"
                    >TextEdit</emphasis>). Next modify the example
                with your required information (such as the
                authentication token you have received from the
                system), as detailed in this guide.</para>
            <note>
                <para>The carriage returns in the cURL request
                    examples that are part of the cURL syntax are
                    escaped with a backslash ('\') in order to avoid
                    prematurely terminating the command. However you
                    should not escape carriage returns inside the XML
                    or JSON message within the command.</para>
            </note>
            <para>Consider the following cURL authenticate: XML
                request example that is described in detail in the
                next section "Generate an authentication
                token":</para>
            <example>
                <title>cURL authenticate: XML request</title>
                <?dbfo keep-together="always"?>
                <screen language="bash">curl -i -d \
'&lt;?xml version="1.0" encoding="UTF-8"?&gt;  
 &lt;auth&gt;   
    &lt;apiKeyCredentials     
        xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"     
        username="<emphasis role="bold">your_username</emphasis>"     
        apiKey="<emphasis role="bold">your_api_key</emphasis>"/&gt;   
 &lt;/auth&gt;' \
'https://identity.api.rackspacecloud.com/v2.0/tokens'</screen>
            </example>
            <para>You can see that the lines that are part of the cURL
                command syntax have all been escaped with a backslash
                ('\') to indicate that the command continues on the
                next line:</para>
            <screen language="bash">curl -i -d \
  
   
(... lines within the xml portion of the message are not shown in this example)
(... the example only shows lines that are part of cURL syntax)     
     
    
   
 &lt;/auth&gt;' \
'https://identity.api.rackspacecloud.com/v2.0/tokens'</screen>
            <para>However the lines <emphasis>within</emphasis> the
                xml portion of the message are
                    <emphasis>not</emphasis> escaped with a backslash
                ('\') in order to avoid issues with the xml
                processing:</para>
            <screen language="bash">'&lt;?xml version="1.0" encoding="UTF-8"?&gt;  
 &lt;auth&gt;   
    &lt;apiKeyCredentials     
        xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"     
        username="<emphasis role="bold">your_username</emphasis>"     
        apiKey="<emphasis role="bold">your_api_key</emphasis>"/&gt;   
 &lt;/auth&gt;' \
</screen>
            <note>
                <para>The final line of the xml message is escaped
                    since the backslash lies
                        <emphasis>outside</emphasis> the xml message
                    and continues the cURL command to the next
                    line.</para>
            </note>
            <para>After you are finished modifying the text for the
                cURL request example with your information (for
                example <emphasis role="bold">
               <code>your_username</code>
            </emphasis> and
                    <emphasis role="bold">
               <code>your_api_key</code>
            </emphasis>), paste it
                into your terminal window. Then execute the cURL
                command by pressing <guilabel>Enter</guilabel>.</para>
            <para>You will be performing the copy/paste operation and
                then modifying the example using your personal
                information in order to generate an authentication
                token in the next section.</para>
            <para>If you have trouble copying and pasting the examples
                as described, try typing the entire example on one
                long line, removing all the backslash line
                continuation characters.</para>
        </section>
    </chapter>
    <chapter xml:id="Generating_Auth_Token">
        <title>Generate an authentication token</title>
        <para>You need to generate a token whether you use cURL or a
            REST client.</para>
        
        <para>In order to use the REST API, you need to obtain an
            authentication token, which will be passed with each
            request using the <code>X-Auth-Token</code> header. </para>
        <para>The following example demonstrates how to use cURL to
            obtain the authentication token. You need to supply the
            authentication token when making subsequent Managed DNS
            API calls.</para>
        <para>Remember to replace the names in the Authenticate
            Request examples below with their respective values:<itemizedlist spacing="compact">
                <listitem>
                    <para>
                  <emphasis role="bold">your_username</emphasis> — The
                        username is your common Rackspace Cloud
                        username, as supplied during
                        registration.</para>
                </listitem>
                <listitem>
                    <para>
                  <emphasis role="bold">your_api_key</emphasis> — The key
                        is your API access key.</para>
                    <para>
                  <emphasis role="bold">To find your API
                            key:</emphasis>
               </para>
                    <orderedlist>
                        <listitem>
                            <para>Log in to the Cloud Control Panel
                                   (<link xlink:href="https://mycloud.rackspace.com">https://mycloud.rackspace.com</link>).</para>
                        </listitem>
                        <listitem>
                            <para>On the upper-right side of the top
                                navigation pane, click your
                                username.</para>
                        </listitem>
                        <listitem>
                            <para>From the menu, select
                                   <guimenuitem>Account
                                   Settings</guimenuitem>.</para>
                        </listitem>
                        <listitem>
                            <para>In the Login Details section of the
                                Account Settings page, locate the
                                   <guilabel>API Key</guilabel> field
                                and click
                                <guibutton>Show</guibutton>.</para>
                        </listitem>
                        <listitem>
                            <para>Copy the value of the API key and
                                paste it into a text editor of your
                                choice.</para>
                        </listitem>
                        <listitem>
                            <para>Click <guibutton>Hide</guibutton> to
                                hide the value of the API key. </para>
                        </listitem>
                    </orderedlist>
                </listitem>
            </itemizedlist>
      </para>
        <para> Use the following endpoint to access the Authentication
            Service: </para>
        <itemizedlist spacing="compact">
            <listitem>
                <para>
               <link xlink:href="https://identity.api.rackspacecloud.com/v2.0/">https://identity.api.rackspacecloud.com/v2.0/</link>
                </para>
            </listitem>
        </itemizedlist>
        <para>Notice that you authenticate using a special URL for
            Cloud authentication services. For example, you may use
                <code>https://identity.api.rackspacecloud.com/v2.0/tokens</code>,
            as shown in the following authenticate request examples.
            Note that the <code>v2.0</code> component in the URL
            indicates that you are using version 2.0 of the Cloud
            Identity API.</para>
        <example>
            <title>cURL authenticate: JSON request</title>
            <?dbfo keep-together="always"?>
            <screen language="bash">curl -s -d \
'{
    "auth":
    {
       "RAX-KSKEY:apiKeyCredentials":
       {  
          "username": "<emphasis role="bold">your_username</emphasis>",  
          "apiKey": "<emphasis role="bold">your_api_key</emphasis>"}
    }  
}' \
-H 'Content-Type: application/json' \
'https://identity.api.rackspacecloud.com/v2.0/tokens' | python -m json.tool</screen>
        </example>
        <example>
            <title>Authenticate: JSON response</title>
            <programlisting language="json">HTTP/1.1 200 OK
Content-Type: application/json; charset=UTF-8
Content-Length: 477
Date: Thu, 12 Apr 2012 18:45:13 GMT

{
    "access": {
     
        "token": {
            "expires": "2011-12-08T22:51:02.000-06:00", 
            "id": "vvvvvvvv-wwww-xxxx-yyyy-zzzzzzzzzzzz"
        }, 
        "user": {
            "id": "123456", 
            "name": "jsmith",
            "RAX-AUTH:defaultRegion": "DFW",
            "roles": [
                {
                    "description": "Admin Role.", 
                    "id": "identity:admin", 
                    "name": "identity:admin"
                }, 
                {
                    "description": "Default Role.", 
                    "id": "identity:default", 
                    "name": "identity:default"
                }
            ]
        },
        "serviceCatalog": [
            {
                "endpoints": [
                    {
                        "publicURL": "https://dfw.databases.api.rackspacecloud.com/v1.0/1100111", 
                        "region": "DFW", 
                        "tenantId": "1100111"
                    }, 
                    {
                        "publicURL": "https://ord.databases.api.rackspacecloud.com/v1.0/1100111", 
                        "region": "ORD", 
                        "tenantId": "1100111"
                    }
                ], 
                "name": "cloudDatabases", 
                "type": "rax:database"
            },
            {
                "endpoints": [
                    {
                        "publicURL": "https://dfw.loadbalancers.api.rackspacecloud.com/v1.0/1100111", 
                        "region": "DFW", 
                        "tenantId": "1100111"
                    }, 
                    {
                        "publicURL": "https://ord.loadbalancers.api.rackspacecloud.com/v1.0/1100111", 
                        "region": "ORD", 
                        "tenantId": "1100111"
                    }
                ], 
                "name": "cloudLoadBalancers", 
                "type": "rax:load-balancer"
            }, 
            {
                "endpoints": [
                    {
                        "tenantId": "1100111",
                        "region": "DFW",
                        "publicURL": "https://dfw.servers.api.rackspacecloud.com/v2/1100111", 
                        "versionId": "2", 
                        "versionInfo": "https://dfw.servers.api.rackspacecloud.com/v2/", 
                        "versionList": "https://dfw.servers.api.rackspacecloud.com/"
                    },
                    {
                        "tenantId": "1100111",
                        "region": "ORD",
                        "publicURL": "https://ord.servers.api.rackspacecloud.com/v2/1100111", 
                        "versionId": "2", 
                        "versionInfo": "https://ord.servers.api.rackspacecloud.com/v2/", 
                        "versionList": "https://ord.servers.api.rackspacecloud.com/"
                    }
                ],
                "name": "cloudServersOpenStack", 
                "type": "compute"
            },
            {
                "endpoints": [
                    {
                        "tenantId": "1100111", 
                        "publicURL": "https://servers.api.rackspacecloud.com/v1.0/1100111", 
                        "versionId": "1.0", 
                        "versionInfo": "https://servers.api.rackspacecloud.com/v1.0/", 
                        "versionList": "https://servers.api.rackspacecloud.com/"
                    }
                ],
                "name": "cloudServers", 
                "type": "compute"
            }, 
            {
                "endpoints": [
                    {
                        "tenantId": "MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee",
                        "publicURL": "https://storage101.dfw1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee", 
                        "internalURL": "https://snet-storage101.dfw1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee", 
                        "region": "DFW" 
                    },
                    {
                        "tenantId": "MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee",
                        "publicURL": "https://storage101.ord1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee", 
                        "internalURL": "https://snet-storage101.ord1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee", 
                        "region": "ORD" 
                    }
                ], 
                "name": "cloudFiles", 
                "type": "object-store"
            }, 
            {
                "endpoints": [  
                    {
                        "tenantId": "MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee", 
                        "publicURL": "https://cdn1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee", 
                        "region": "DFW"
                    },                
                    {
                        "tenantId": "MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee", 
                        "publicURL": "https://cdn2.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee", 
                        "region": "ORD"
                    }
                ],
                "name": "cloudFilesCDN", 
                "type": "rax:object-cdn"
            }, 
            {
                "endpoints": [
                    {
                        "tenantId": "1100111",
                        "publicURL": "https://preview.dns.api.rackspacecloud.com/v2/1100111"
                    }
                ],
                "name": "managedDNS", 
                "type": "dns"
            }
        ]
    }
}
</programlisting>
        </example>
        <para>The authentication token <code>id</code> is returned
            along with an <code>expires</code> attribute that
            specifies when the token expires. </para>
        <note>
            <title>Notes</title>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>For all response examples in this guide, the
                        field values you receive in your responses
                        will vary from those shown here since they
                        will be specific to your account.</para>
                </listitem>
                <listitem>
                    <para>The information shown in the Authenticate
                        Response examples above is for US-based
                        accounts. If you have a UK-based account, you
                        will see the service catalog information for
                        UK-based accounts.</para>
                </listitem>
                <listitem>
                    <para>The <code>id</code> attribute in the
                        Authenticate Response specifies the
                        authentication token. Tokens are valid for a
                        finite duration. Remember to supply your
                        authentication token wherever you see the
                        field <emphasis role="bold"
                            >your_auth_token</emphasis> in the
                        examples in this guide.</para>
                </listitem>
                <listitem>
                    <para> The <code>expires</code> attribute denotes
                        the time after which the token will
                        automatically become invalid. A token may be
                        manually revoked before the time identified by
                        the expires attribute; <code>expires</code>
                        predicts a token's maximum possible lifespan
                        but does not guarantee that it will reach that
                        lifespan. Clients are encouraged to cache a
                        token until it expires.</para>
                </listitem>
                <listitem>
                    <para>Applications should be designed to
                        re-authenticate after receiving a 401
                        (Unauthorized) response from a service
                        endpoint.</para>
                </listitem>
            </itemizedlist>
        </note>
        <para>Note that the <code>publicURL</code> endpoint for
                <code>cloudDNS</code>
                (<code>https://preview.dns.api.rackspacecloud.com/v2/</code>)
            is also returned in the response.</para>
        <note>
            <para> Please make sure you have DNS v2 endpoint defined
                in your service catalog that was returned. If not
                please contact the DNS team. </para>
        </note>
        <para security="reviewer">Reviewer: **Remember to update the
            DNS v2 endpoint after Preview to the production
            endpoint.**</para>
        <para>After authentication, you can use cURL to perform
                <command>GET</command>, <command>DELETE</command>,
                <command>PUT</command>, and <command>POST</command>
            requests for the Managed DNS API.</para>
        <para>If you have problems running any of the examples in this
            guide, support for Managed DNS is available for US, UK,
            HKG, and SYD customers 24x7x365 via phone, chat, or you
            may also file a ticket from the Cloud Control
            Panel.</para>
        
    </chapter>
    <chapter xml:id="Service_Access_Endpoints-d1e753">
        <title>Service access endpoints</title>
        <para>The DNS service is not a regionalized service. DNS is
            therefore responsible for appropriate replication,
            caching, and overall maintenance of DNS data across
            regional boundaries to other DNS servers.</para>
        <para>You can find the service access endpoints for Managed
            DNS in the table below.</para>
        
        <para>
            <table rules="all">
                <caption>Service access endpoint examples</caption>
                <thead>
                    <tr align="center">
                        
                        <td colspan="1">Endpoint</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        
                        <td colspan="1">
                            <code>https://preview.dns.api.rackspacecloud.com/v2/1234</code></td>
                    </tr>
                    <tr align="left" security="writeronly">
                        
                        <td colspan="1">
                            <code>https://lon.dns.api.rackspacecloud.com/v2.0/</code></td>
                    </tr>
                </tbody>
            </table>
        </para>
        <note>
         <title>Notes</title>
            <itemizedlist>
                <listitem>
                    <para>The service catalog returned in the auth
                        response specifies the correct service access
                        endpoint to use for accessing DNS. Use the
                        service name (cloudDNS) to locate the correct
                        endpoint in the service catalog. See the auth
                        response examples in the previous section
                        "Generate an authentication token".</para>
                </listitem>
                <listitem>
                    <para>The new v2 endpoint <emphasis>must
                            appear</emphasis> in your service catalog
                        in order for you to access it.</para>
                </listitem>
                <listitem>
                    <para>All examples in this guide assume that you
                        are operating against the US region.</para>
                </listitem>
            </itemizedlist>
        </note>
        <para>When making a Managed DNS API call, place the endpoint
            at the beginning of the request URL, for example:
                <code>https://preview.dns.api.rackspacecloud.com/v2/1234</code>,
            as you can see in the cURL Create zone request examples in the section "Create a zone".
            For example, the complete URL
            for the Create zone API operation is
                <code>https://preview.dns.api.rackspacecloud.com/v2/1234/</code><code>zones</code>.
            Note that the <code>v2</code> component in the URL
            indicates that you are using version 2.0 of the Managed
            DNS API.</para>
        <para>Remember to replace <code>1234</code> in the example
            URLs shown above with your real Rackspace Cloud account
            number.</para>
        <para security="reviewer">Reviewer: remember to update the v2
            endpoint after Preview.</para>
    </chapter>
    
        <chapter xml:id="Export_CURL_ENV_VARS">
            <title>Export Environment Variables to Run cURL
                Commands</title>
            <para>To run the cURL command examples in this guide,
                follow this procedure to export environment variables. </para>
            <para audience="gsonly">Otherwise, if you are using CLI
            client commands, proceed to the next section, "Create a
            zone". </para>
            <para>Export your tenant ID and authentication token to
                environment variables. All cURL examples in this guide
                use these environment variables.</para>
            <procedure>
                <title>To export environment variables:</title>
                <step>
                    <para>Export your tenant ID to the
                            <literal>account</literal> environment
                        variable:</para>
                    <screen><computeroutput>$ export account="&lt;tenantId&gt;"</computeroutput></screen>
                    <para>Where <parameter>tenantId</parameter> is the
                        value in the <literal>tenantId</literal> field
                        in the authentication response. </para>
                </step>
                <step>
                    <para>Export your authentication token to the
                        <literal>token</literal> environment variable:
                    <screen><computeroutput>$ export token="&lt;id&gt;"</computeroutput></screen>Where
                        <parameter>id</parameter> is the
                    authentication token value in the
                        <literal>id</literal> field in the
                        <literal>token</literal> element in the
                    authentication response. Refer to the previous
                    section "Generate an authentication token" for
                    information about the token id.</para>
                </step>
            </procedure>
        </chapter>
    <chapter xml:id="Create_Zone">
        <title>Create a zone</title>
        <para>The Create zone API call provisions one or more new DNS
            zones, based on the configuration defined in the request
            object. To create a zone, you need to post to the
                <emphasis role="bold">/zones</emphasis> endpoint. If
            the corresponding request cannot be fulfilled due to
            insufficient or invalid data, an <code>HTTP</code>
            <returnvalue>400 (Bad Request)</returnvalue> error
            response will be returned with information regarding the
            nature of the failure in the body of the response.
            Failures in the validation process are non-recoverable and
            require the caller to correct the cause of the failure and
                <command>POST</command> the request again.</para>
        <para> This call returns an <emphasis>asynchronous</emphasis>
            response. In fact, <command>PUT</command>,
                <command>POST</command>, and <command>DELETE</command>
            Managed DNS API calls are all
                <emphasis>asynchronous</emphasis>, since they may take
            some time to process. Therefore they return 202 ACCEPTED
            responses containing information with a link URL, which
            allows the progress, status, and/or response information
            of the call to be retrieved at a later point in time. </para>
        <para>In this case, assume that you want to create a zone with
            the following configuration:<itemizedlist>
                <listitem>
                    <para>name=example.org.</para>
                    <note>
                        <para>If you want to substitute your own zone
                            name, you can use any letter, numbers
                            between 0 and 9, and the character "-".
                            For example, you might use your first name
                            and last initial at the beginning of the
                            name, as follows: "bobmexample.org."
                            Ensure that you add the final period (.)
                            at the end of your fully qualified zone
                            name.</para>
                    </note>
                </listitem>
                <listitem>
                    <para>ttl=7200</para>
                </listitem>
                <listitem>
                    <para>email="joe@example.org."</para>
                </listitem>
            </itemizedlist></para>
        <para>Choose one of the following methods:<itemizedlist>
                <listitem>
                    <para><xref linkend="cli_create_zone"/></para>
                </listitem>
                <listitem>
                    <para><xref linkend="curl_create_zone"/></para>
                </listitem>
            </itemizedlist></para>
        <section xml:id="cli_create_zone">
            <title>Create zone with the CLI</title>
        
        <para>You need to use the <emphasis role="bold">zone
                    create</emphasis> CLI call to create a zone with
                the configuration that you specify.</para>
            <para><code>usage: openstack zone create zone_name --email
                    EMAIL --ttl TTL</code></para>
        
            <para>Enter the following command:</para>
            <programlisting> $ openstack zone create example.org. --email "joe@example.org" --ttl 7200 
</programlisting>
            <note>
                <para>If you decide to change the zone name, make sure
                    to use a valid name. You can use any letter,
                    numbers between 0 and 9, and the character
                    "-".</para>
            </note>
            <para>The response is similar to the
                following:<programlisting>
+----------------+--------------------------------------+
| Field          | Value                                |
+----------------+--------------------------------------+
| action         | CREATE                               |
| created_at     | 2015-10-29T21:54:09.000000           |
| description    | None                                 |
| email          | joe@example.org                      |
| id             | b8500fe8-eff1-4523-90a4-0765cf39d273 |
| masters        |                                      |
| name           | example.org.                         |
| pool_id        | 794ccc2c-d751-44fe-b57f-8894c9f5c842 |
| project_id     | 938611                               |
| serial         | 1446155649                           |
| status         | PENDING                              |
| transferred_at | None                                 |
| ttl            | 7200                                 |
| type           | PRIMARY                              |
| updated_at     | None                                 |
| version        | 1                                    |
+----------------+--------------------------------------+

</programlisting></para>
            <note>
                <para>You will see the following warning from
                    keystone, please disregard
                    it:<programlisting> <emphasis role="italic">Failed to contact the endpoint at  https://api-babby-dev.dsgn8.net/v2/938611 for discovery.
      Fallback to  using that endpoint as the base url.</emphasis> </programlisting></para>
            </note>
            <para>This request is asynchronous. So the
                    <code>status</code> is set to <code>PENDING</code>
                when the zone is initially created. When the zone is
                created completely, the status is set to
                    <code>ACTIVE</code>. You will be able to see the
                    <code>ACTIVE</code> status when you run the
                    <emphasis role="bold">zone show</emphasis> command
                in the next section.</para>
            <note>
                <para>Refer to <link
                        xlink:href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/sync_asynch_responses.html"
                        >http://docs-internal.rackspace.com/cdns/api/v1.0/cdns-devguide-2/content/sync_asynch_responses.html</link>
                    for more information about how the asynchronous
                    call works.</para>
            </note>
            <para>In the previous example, you can see that the zone
                    <code>example.org.</code> was created. You will
                need the zone <code>id</code> returned in the response
                for making the Get zone call in the next section, and
                you should supply this value wherever you see the
                field <emphasis role="bold">zone_id</emphasis> in the
                examples in this guide.</para>
        </section>
        <section xml:id="curl_create_zone">
            <title>Create zone with cURL</title>
            <para>You need to use the Create zone API call (POST
                    <code>/zones</code>) to create a zone with the
                configuration that you specify.</para>
            <para>The following example shows the cURL request for
                Create zone:</para>
            <example>
                <title>cURL Create zone: JSON request</title>
                <programlisting language="bash">curl -s -d \
'{
    "name" : "<emphasis role="bold">your_zone_name</emphasis>",
    "email" : "joe@example.org",
    "ttl" : 7200,
    "description" : "This is an example zone."
}' \
-H "X-Auth-Token: $token" \
-H "Content-Type: application/json" \
https://preview.dns.api.rackspacecloud.com/v2/$account/zones | python -m json.tool</programlisting>
            </example>
            <para>Remember to replace the names in the examples above
                with their actual respective values for all the cURL
                examples that follow:<itemizedlist spacing="compact">
                    <listitem>
                        <para>
                            <emphasis role="bold"
                                >your_zone_name</emphasis> — to name
                            your zone, you can use any letter, numbers
                            between 0 and 9, and the character
                            "-".</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>The following example shows the initial asynchronous
                responses for Create zone:</para>
            <example>
                <title>Create zone: initial asynchronous JSON
                    response</title>
                <programlisting language="json">HTTP/1.1 202 Accepted
Content-Type: application/json

{
    "id": "a86dba58-0043-4cc6-a1bb-69d5e86f3ca3",
    "pool_id": "572ba08c-d929-4c70-8e42-03824bb24ca2",
    "project_id": "123456",
    "name": "example.org.",
    "email": "joe@example.org.",
    "ttl": 7200,
    "serial": 1404757531,
    "status": "PENDING",
    "description": "This is an example zone.",
    "masters": [],
    "type": "PRIMARY",
    "transferred_at": null,
    "version": 1,
    "created_at": "2015-06-18T18:25:31.275934",
    "updated_at": null,
    "links": {
      "self": "https://preview.dns.api.rackspacecloud.com/v2/zones/a86dba58-0043-4cc6-a1bb-69d5e86f3ca3"
    }
}
</programlisting>
            </example>
            <para>This request is asynchronous. So the
                    <code>status</code> is set to <code>PENDING</code>
                when the zone is initially created. When the zone is
                created completely, the status is set to
                    <code>ACTIVE</code>. To get the status of the
                zone, you can query the <code>self</code> link
                returned in the create response. You will see the
                    <code>ACTIVE</code> status in the next section
                when you call the List zone operation.</para>
            <note>
                <para>Refer to <link
                        xlink:href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/sync_asynch_responses.html"
                        >http://docs-internal.rackspace.com/cdns/api/v1.0/cdns-devguide-2/content/sync_asynch_responses.html</link>
                    for more information about how the asynchronous
                    call works.</para>
            </note>
            <para>In the previous example, you can see that the zone
                    <code>example.org.</code> was created. You will
                need the zone <code>id</code> returned in the response
                for making the List zone call in the next section, and
                you should supply this value wherever you see the
                field <emphasis role="bold">zone_id</emphasis> in the
                examples in this guide.</para>
        </section>
    </chapter>
    
    <chapter xml:id="List_Zone">
            <title>List zone</title>
            <para>This operation provides detailed output for a
            specific zone. You can only query for zones that you have
            permission to query, namely those created using your tenant ID.</para>
        <para>Choose one of the following methods:<itemizedlist>
                <listitem>
                    <para><xref linkend="cli_list_zone"/></para>
                </listitem>
                <listitem>
                    <para><xref linkend="curl_list_zone"/></para>
                </listitem>
            </itemizedlist></para>
        <section xml:id="cli_list_zone">
            <title>List zone with the CLI</title>
            <para>You need to use the <emphasis role="bold">zone
                    show</emphasis> CLI command to list a zone.</para>
            <para><code>usage: openstack zone show
                zone_name</code></para>
            <para>Enter the following command:</para>
            <programlisting> $ openstack zone show example.org.  
</programlisting>
            <para>The response is similar to the
                following:<programlisting>
+----------------+--------------------------------------+
| Field          | Value                                |
+----------------+--------------------------------------+
| action         | CREATE                               |
| created_at     | 2015-10-29T21:54:09.000000           |
| description    | None                                 |
| email          | joe@example.org                      |
| id             | b8500fe8-eff1-4523-90a4-0765cf39d273 |
| masters        |                                      |
| name           | example.org.                         |
| pool_id        | 794ccc2c-d751-44fe-b57f-8894c9f5c842 |
| project_id     | 938611                               |
| serial         | 1446155649                           |
| status         | ACTIVE                               |
| transferred_at | None                                 |
| ttl            | 7200                                 |
| type           | PRIMARY                              |
| updated_at     | 2015-10-29T21:54:39.000000           |
| version        | 3                                    |
+----------------+--------------------------------------+

</programlisting></para>
            <para>You can see from the response that the zone has been
                created and is <code>ACTIVE</code>.</para>
        </section>
        <section xml:id="curl_list_zone">
            <title>List a zone with cURL</title>
            <para>This operation does not require a request body. </para>
            <para>The following example shows the cURL request for
                List zone:</para>
            <example>
                <title>cURL List zone: JSON request</title>
                <programlisting language="bash">curl -s  \
-H "X-Auth-Token: $token"  \
-H "Accept: application/json"  \
https://preview.dns.api.rackspacecloud.com/v2/$account/zones/<emphasis role="bold">zone_id</emphasis> | python -m json.tool</programlisting>
            </example>
            <para>Remember to replace the names in the examples above
                with their actual respective values for all the cURL
                examples that follow:<itemizedlist spacing="compact">
                    <listitem>
                        <para>
                            <emphasis role="bold">zone_id</emphasis> —
                            as returned in your create zone response
                            (must be replaced in the request
                            URL)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>The following example shows the List zone
                response:</para>
            <example>
                <title>List zone: JSON response</title>
                <programlisting language="json">HTTP/1.1 200 OK
Vary: Accept
Content-Type: application/json

{
    "id": "a86dba58-0043-4cc6-a1bb-69d5e86f3ca3",
    "pool_id": "572ba08c-d929-4c70-8e42-03824bb24ca2",
    "project_id": "123456",
    "name": "example.org.",
    "email": "joe@example.org.",
    "ttl": 7200,
    "serial": 1404757531,
    "status": "ACTIVE",
    "description": "This is an example zone.",
    "masters": [],
    "type": "PRIMARY",
    "transferred_at": null,
    "version": 1,
    "created_at": "2015-06-18T18:25:31.275934",
    "updated_at": null,
    "links": {
      "self": "https://preview.dns.api.rackspacecloud.com/v2/$account/zones/a86dba58-0043-4cc6-a1bb-69d5e86f3ca3"
    }
}

</programlisting>
            </example>
            <para>You can see from the response that the zone has been
                created and is <code>ACTIVE</code>.</para>
            <note>
                <para>If you have multiple zones or records and want
                    to get a subset of them, you could paginate, sort
                    or filter the results. More information on these
                    topics is available in the <citetitle>Rackspace
                        Managed DNS Devguide</citetitle> at <link
                        xlink:href="http://docs-internal.rackspace.com/"
                        >http://docs-internal.rackspace.com/</link>.</para>
            </note>
        </section>
        </chapter>
    <chapter xml:id="Create_Recordset">
        <title>Create a recordset</title>
        <para>A record set groups together a list of related records
            of the same type. It is the essential content of your zone
            file. Record sets are also referred to as “Resource Record
            Sets” or “RRSets”.  The following example creates an 'A'
            recordset.  An 'A' recordset is used to map a hostname to
            an IP address.</para>
        <para>In this section, you will create a recordset for your
            new zone as follows:</para>
        <itemizedlist>
            <listitem>
                <para>One 'A' recordset to map the IPV4 address of
                    your cloud server to the new zone that you created
                    in the previous section, "Create a zone". </para>
            </listitem>
        </itemizedlist>
        <para>Choose one of the following methods:<itemizedlist>
                <listitem>
                    <para><xref linkend="cli_create_recordset"
                        /></para>
                </listitem>
                <listitem>
                    <para><xref linkend="curl_create_recordset"
                        /></para>
                </listitem>
            </itemizedlist></para>
        <section xml:id="cli_create_recordset">
            <title>Create a recordset with the CLI</title>
            <para>You need to use the <emphasis role="bold">recordset
                    create</emphasis> CLI command to create a
                recordset.</para>
            <para><code>usage: openstack recordset create zone_id
                    zone_name --records RECORDS --type
                TYPE</code></para>
            <para>Enter the following command:</para>
            <programlisting>  $ openstack recordset create
        b8500fe8-eff1-4523-90a4-0765cf39d273 example.org. --records 10.1.0.5 --type "A"   
</programlisting>
            <para>The response is similar to the
                following:<programlisting>
+-------------+--------------------------------------+
| Field       | Value                                |
+-------------+--------------------------------------+
| action      | CREATE                               |
| created_at  | 2015-10-29T22:38:58.000000           |
| description | None                                 |
| id          | 0536cf1c-e379-4617-a1b0-63cdd16fd671 |
| name        | example.org.                         |
| records     | 10.1.0.5                             |
| status      | PENDING                              |
| ttl         | None                                 |
| type        | A                                    |
| updated_at  | None                                 |
| version     | 1                                    |
| zone_id     | b8500fe8-eff1-4523-90a4-0765cf39d273 |
+-------------+--------------------------------------+
</programlisting></para>
            <para>You can see from the response <code>status</code>
                that the recordset creation is
                <code>PENDING</code>.</para>
        </section>
        <section xml:id="curl_create_recordset">
            <title>Create a recordset with cURL</title>
            <para>The following examples show the cURL request for
                Create recordset:</para>
            <example>
                <?dbfo keep-together="always"?>
                <title>cURL Create recordset: JSON request</title>
                <programlisting language="bash">curl -s -d \
'{
  "name" : "<emphasis role="bold">example.org.</emphasis>",
  "description" : "This is an example record set.",
  "type" : "A",
  "ttl" : 3600,
  "records" : [
      "10.1.0.2"
  ]
}' \
-H "X-Auth-Token: $token" \
-H "Content-Type: application/json" \
https://preview.dns.api.rackspacecloud.com/v2/$account/zones/<emphasis role="bold">zone_id</emphasis>/recordsets | python -m json.tool</programlisting>
            </example>
            <para>Remember to replace the names in the examples above
                with their actual respective values:<itemizedlist
                    spacing="compact">
                    <listitem security="writeronly">
                        <para>
                            <emphasis role="bold"
                                >your_cloud_server_ip_address</emphasis>
                            —see <link
                                xlink:href="http://docs.rackspace.com/cdns/api/v1.0/cdns-getting-started/content/Create_Cloud_Server.html"
                                >Create a new cloud server</link> for
                            the IP address you recorded for the new
                            cloud server you created; must be replaced
                            in the request body</para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">name</emphasis> —
                            the name you used in your create zone
                            response (see the examples in the previous
                            section, "Create a zone")</para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">zone_id</emphasis> —
                            as returned in your create zone response
                            (see the examples in the previous section,
                            "Create a zone"; must be
                            replaced in the request URL</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>The following example shows the response for Create
                recordset:</para>
            <example>
                <title>Create recordset: JSON response</title>
                <programlisting language="json">HTTP/1.1 202 Accepted
Content-Type: application/json

{
    "id": "f7b10e9b-0cae-4a91-b162-562bc6096648",
    "created_at": "2015-06-18T19:59:44.000000",
    "updated_at": null,
    "ttl": 3600,
    "name": "example.org.",
    "zone_id": "a86dba58-0043-4cc6-a1bb-69d5e86f3ca3",
    "version": 1,
    "type": "A",
    "records": [ "10.1.0.2" ],
    "status": "PENDING",
    "action": "CREATE",
    "description": "This is an example record set.",
    "links": {
        "self": "https://preview.dns.api.rackspacecloud.com/v2/$account/zones/a86dba58-0043-4cc6-a1bb-69d5e86f3ca3/recordsets/f7b10e9b-0cae-4a91-b162-562bc6096648"
    }
}
</programlisting>
            </example>
            <note security="writeronly">
                <para>Your JSON response will show the IP address of
                    the cloud server you created earlier in this guide
                    rather than the value <code>10.1.0.2</code>, which
                    is simply provided as an example.</para>
            </note>
            <para>This request is asynchronous, so the
                    <code>status</code> is set to <code>PENDING</code>
                when the recordset is initially created. When the
                recordset is created completely, the
                    <code>status</code> is set to <code>ACTIVE</code>.
                To get the status of the recordset, you can query the
                    <code>self</code> link returned in the Create
                recordset response.</para>
        </section>
    </chapter>
    <chapter xml:id="List_Recordset">
        <title>List a recordset</title>
        <para>You can list a specific recordset using the recordset
                <code>id</code>.</para>
        <para>Choose one of the following methods:<itemizedlist>
                <listitem>
                    <para><xref linkend="cli_list_recordset"/></para>
                </listitem>
                <listitem>
                    <para><xref linkend="curl_list_recordset"/></para>
                </listitem>
            </itemizedlist></para>
        <section xml:id="cli_list_recordset">
            <title>List a recordset with the CLI</title>
            <para>You need to use the <emphasis role="bold">recordset
                    show</emphasis> CLI command to list a
                recordset.</para>
            <para><code>usage: openstack recordset show zone_id
                    recordset_id</code></para>
            <para>Enter the following command:</para>
            <programlisting>$ openstack recordset show b8500fe8-eff1-4523-90a4-0765cf39d273
      0536cf1c-e379-4617-a1b0-63cdd16fd671    
</programlisting>
            <para>The response is similar to the
                following:<programlisting>
+-------------+--------------------------------------+
| Field       | Value                                |
+-------------+--------------------------------------+
| action      | CREATE                               |
| created_at  | 2015-10-29T22:38:58.000000           |
| description | None                                 |
| id          | 0536cf1c-e379-4617-a1b0-63cdd16fd671 |
| name        | example.org.                         |
| records     | 10.1.0.5                             |
| status      | ACTIVE                               |
| ttl         | None                                 |
| type        | A                                    |
| updated_at  | None                                 |
| version     | 1                                    |
| zone_id     | b8500fe8-eff1-4523-90a4-0765cf39d273 |
+-------------+--------------------------------------+
</programlisting></para>
            <para>You can see from the response <code>status</code>
                that the recordset is <code>ACTIVE</code>, indicating
                that the recordset is now created and active.</para>
        </section>
        <section xml:id="curl_list_recordset">
            <title>List a recordset with cURL</title>
            <para>The following example shows the cURL request for
                List recordset:</para>
            <example>
                <?dbfo keep-together="always"?>
                <title>cURL List recordset: JSON request</title>
                <programlisting language="bash">curl -s \
-H "X-Auth-Token: $token" \
-H "Content-Type: application/json" \
https://preview.dns.api.rackspacecloud.com/v2/$account/zones/<emphasis role="bold">zone_id</emphasis>/recordsets/<emphasis role="bold">recordset_id</emphasis> | python -m json.tool</programlisting>
            </example>
            <para>Remember to replace the names in the examples above
                with their actual respective values:<itemizedlist
                    spacing="compact">
                    <listitem>
                        <para>
                            <emphasis role="bold">zone_id</emphasis> —
                            as returned in your Create zone response
                            (see the examples in the previous section
                            "Create a zone"; must be replaced in the
                            request URL).</para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold"
                                >recordset_id</emphasis> —see the
                            previous section "Create a recordset" for
                            the recordset <code>id</code> returned in
                            the Create recordset response; must be
                            replaced in the request URL.</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>The following example shows the response for List
                recordset:</para>
            <example>
                <title>List recordset: JSON response</title>
                <programlisting language="json">HTTP/1.1 200 OK
Vary: Accept
Content-Type: application/json

{
    "id": "f7b10e9b-0cae-4a91-b162-562bc6096648", 
    "created_at": "2015-06-18T19:59:44.000000", 
    "updated_at": null,
    "ttl": 3600,
    "name": "example.org.",
    "zone_id": "2150b1bf-dee2-4221-9d85-11f7886fb15f",
    "version": 1,
    "type": "A",  
    "records": [ "10.1.0.2" ], 
    "status": "ACTIVE",
    "action": "NONE",
 "description": "This is an example record set.",
    "links": {
        "self": "https://preview.dns.api.rackspacecloud.com/v2/$account/zones/2150b1bf-dee2-4221-9d85-11f7886fb15f/recordsets/f7b10e9b-0cae-4a91-b162-562bc6096648"
    },
}

</programlisting>
            </example>
            <para>Note that <code>status</code> is set to
                    <code>ACTIVE</code>, indicating that the recordset
                is now created and active. </para>
        </section>
    </chapter>
    <chapter xml:id="Additional_Resources">
        <title>Additional resources</title>
        <para>For information about all Rackspace Managed DNS API
            operations, see the <citetitle>Rackspace Managed DNS
                Developer Guide</citetitle> at <link
                xlink:href="http://docs-internal.rackspace.com/"
                >docs-internal.rackspace.com</link>. All you need to get
            started with the Managed DNS API is in this getting
            started guide and the developer guide. For additional
            information about Managed DNS, see the <link
                xlink:href="http://www.rackspace.com/knowledge_center/article/rackspace-cloud-dns-available-features"
                >Knowledge Center</link>.</para>
        <para>During Preview, please send your feedback and bug
            reports to:
            <email>DNS_EA@rackspace.com</email>.</para>
        <para security="writeronly">The official support channels (phone, chat, email,
            forums, and knowledge base articles) for Managed DNS are
            available through the Rackspace Cloud website at <link
                xlink:href="www.rackspace.com"
                >www.rackspace.com</link>.</para>
        <para security="writeronly">If the Managed DNS system is not functioning as
            expected, you can review the <link
                xlink:href="https://status.rackspace.com/">System
                Status page</link>. This page is updated to reflect
            up-to-date information about the system’s current health
            and status.</para>
        <para security="reviewer">Reviewer: (for EA) please give me
            the link to the System Status page for Managed DNS.</para>
        <para>Interested users can also follow updates and
            announcements for Rackspace on <link
                xlink:href="https://twitter.com/rackspace"
                >Twitter</link>. </para>
        <para security="writeronly">Visit the <link
                xlink:href="https://feedback.rackspace.com/">Product
                Feedback Forum</link> and tell us what you think about
            Managed DNS.</para>
    </chapter>
    <chapter xml:id="DNS_Doc_Change_History">
        <title>Document change history</title>
        <para>This version of the Getting Started replaces and
            obsoletes all previous versions. The most recent changes
            are described in the table below:</para>
        <?rax revhistory?>
    </chapter>
</book>
